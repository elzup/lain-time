{"version":3,"sources":["config/index.ts","components/Fact/index.tsx","utils/index.ts","containers/Lain/logic.ts","utils/meta.ts","containers/Lain/index.tsx","containers/Zero/index.tsx","containers/App/index.tsx","config/serviceWorker.ts","index.tsx"],"names":["config","size","Root","styled","div","Screen","Mat","section","v","r","Dimention","x","y","w","h","Content","p","keyframes","c","C","props","ego","d256","bmax","border","bt","br","bb","bl","ds","map","i","hs","_","range","j","sort","a","b","hash","substr","now","Date","getTime","getRand","dpi","offset","rands","l","length","Math","pow","norm","parseInt","lainSeed","time","n","navigator","window","getMetas","useConnect","cur","delay","history","useHistory","React","msec","Promise","resolve","setTimeout","then","push","LainComponent","useParams","crypto","createHash","update","digest","split","next","d16","d4096","loaded","makeEgo","Number","Fact","Regenerate","to","createBrowserHistory","RouteApp","exact","path","component","Zero","Lain","Boolean","location","hostname","match","rootEl","document","getElementById","console","log","ReactDOM","render","App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1351aed1.chunk.js","sourcesContent":["const config = {\n\tsize: 400,\n} as const\n\nexport default config\n","import * as React from 'react'\nimport { Ego } from '../../types'\nimport styled, { keyframes } from 'styled-components'\nimport _ from 'lodash'\nimport config from '../../config'\nconst { size } = config\n\ntype Props = {\n\tego: Ego\n}\n\nconst Root = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tmin-width: ${size}px;\n\tmin-height: ${size}px;\n\tbackground-color: #210703;\n`\n\nconst Screen = styled.div`\n\tposition: absolute;\n\tleft: calc(50% - ${size / 2}px);\n\ttop: calc(50% - ${size / 2}px);\n\twidth: ${size}px;\n\theight: ${size}px;\n\tbackground-color: #fff;\n\toverflow: hidden;\n\tborder: solid 10px #111;\n`\n\nconst Mat = styled.section`\n\tposition: absolute;\n\ttransform: rotate(${(v) => v.r}deg);\n\ttop: -50%;\n\tleft: -50%;\n\twidth: 200%;\n\theight: 200%;\n`\n\nconst Dimention = styled.div`\n\tposition: absolute;\n\tleft: ${(v) => v.x}%;\n\ttop: ${(v) => v.y}%;\n\twidth: ${(v) => v.w}%;\n\theight: ${(v) => v.h}%;\n\toverflow: hidden;\n\ttransform: rotate(${(v) => v.r}deg);\n`\n\nconst kaos = (p) => keyframes`\n  0% {\n\t\tbackground: linear-gradient(\n\t\t\t${p.r[0]}deg,\n\t\t\t#${p.c[0]} ${p.h[0]}%,\n\t\t\ttransparent ${p.h[0]}%\n\t\t)\n\t\t${p.h[5]}px 0,\n\t\tlinear-gradient(${p.r[1]}deg, transparent 74%, #${p.c[1]} 78%),\n\t\tlinear-gradient(\n\t\t\t${p.r[2]}deg,\n\t\t\ttransparent ${p.h[1]}%,\n\t\t\t#${p.c[2]} ${p.h[2]}%,\n\t\t\t#${p.c[3]} ${p.h[3]}%,\n\t\t\ttransparent ${p.h[4]}%\n\t\t),\n\t\t#${p.c[4]};\n\t\tbackground-size: ${p.h[6] * 10}px ${p.h[7] * 10}px;\n  }\n  100% {\n\t\tbackground: linear-gradient(\n\t\t\t${p.r[1]}deg,\n\t\t\t#${p.c[1]} ${p.h[1]}%,\n\t\t\ttransparent ${p.h[1]}%\n\t\t)\n\t\t${p.h[6]}px 0,\n\t\tlinear-gradient(${p.r[2]}deg, transparent 74%, #${p.c[2]} 78%),\n\t\tlinear-gradient(\n\t\t\t${p.r[3]}deg,\n\t\t\ttransparent ${p.h[2]}%,\n\t\t\t#${p.c[3]} ${p.h[3]}%,\n\t\t\t#${p.c[4]} ${p.h[4]}%,\n\t\t\ttransparent ${p.h[5]}%\n\t\t),\n\t\t#${p.c[5]};\n\t\tbackground-size: ${p.h[7] * 10}px ${p.h[0] * 10}px;\n  }\n`\n\nconst Content = styled.div`\n\tmargin: -50%;\n\twidth: 200%;\n\theight: 200%;\n\ttransform: rotate(${(p) => p.r[3]}deg);\n\tanimation: ${kaos} ${(p) => p.h[1]}s linear 0s infinite forwards;\n`\n\nconst C = (props: Props) => {\n\tconst x = props.ego.d256[0] * 100\n\tconst y = props.ego.d256[1] * 100\n\tconst r = props.ego.d256[2] * 360\n\t// const x = 50\n\t// const y = 50\n\t// const r = 0\n\n\tconst bmax = 100\n\tconst border = {\n\t\tbt: props.ego.d256[3] * bmax,\n\t\tbr: props.ego.d256[4] * bmax,\n\t\tbb: props.ego.d256[5] * bmax,\n\t\tbl: props.ego.d256[6] * bmax,\n\t}\n\tconst ds = [0, 1, 2, 3].map((i) => {\n\t\tconst hs = _.range(10).map(\n\t\t\t(j) => props.ego.d256[(i * 8 + j + 1) % 40] * 100\n\t\t)\n\t\ths.sort((a, b) => a - b)\n\n\t\treturn {\n\t\t\tc: _.range(10).map((j) => props.ego.hash.substr((i * 10 + j) % 34, 6)),\n\t\t\tr: _.range(10).map((j) => props.ego.d256[(i * 8 + j) % 40] * 360),\n\t\t\th: _.range(10).map((j) => props.ego.d256[(i * 8 + j + 2) % 40] * 100),\n\t\t\ths,\n\t\t}\n\t})\n\treturn (\n\t\t<Root>\n\t\t\t<Screen {...border}>\n\t\t\t\t<Mat r={r}>\n\t\t\t\t\t<Dimention x={0} y={0} w={x} h={y}>\n\t\t\t\t\t\t<Content {...ds[0]} />\n\t\t\t\t\t</Dimention>\n\t\t\t\t\t<Dimention x={0} y={y} w={x} h={100 - y}>\n\t\t\t\t\t\t<Content {...ds[1]} />\n\t\t\t\t\t</Dimention>\n\t\t\t\t\t<Dimention x={x} y={0} w={100 - x} h={y}>\n\t\t\t\t\t\t<Content {...ds[2]} />\n\t\t\t\t\t</Dimention>\n\t\t\t\t\t<Dimention x={x} y={y} w={100 - x} h={100 - y}>\n\t\t\t\t\t\t<Content {...ds[3]} />\n\t\t\t\t\t</Dimention>\n\t\t\t\t</Mat>\n\t\t\t</Screen>\n\t\t</Root>\n\t)\n}\n\nexport default C\n","export function sleep(msec: number): Promise<void> {\n\treturn new Promise((resolve) => setTimeout(resolve, msec))\n}\n\nexport const now = () => new Date().getTime()\n","import crypto from 'crypto'\nimport _ from 'lodash'\n\nimport { getMetas } from '../../utils/meta'\nimport { Ego } from '../../types'\n\nconst getRand = (dpi: number, offset: number, rands: number[]) => {\n\tconst l = rands.length\n\tlet v = 0\n\tfor (var i = 0; i < dpi; i++) {\n\t\tconst r = rands[(i + offset) % l]\n\t\t// 1 / 16\n\t\tv += Math.pow(0.0625, i) * r\n\t}\n\treturn v\n}\nconst norm = (v) => parseInt(v, 16) / 16\n\nfunction lainSeed(time: number): string {\n\treturn getMetas() + `${time}`\n}\n\nexport function makeEgo(time: number): Ego {\n\tconst hash = crypto.createHash('sha1').update(lainSeed(time)).digest('hex')\n\tconst rands = hash.split('').map(norm)\n\treturn {\n\t\thash,\n\t\ttime,\n\t\tnext: getRand(2, 0, rands) * 8000,\n\t\td16: _.range(40).map((i) => getRand(1, i, rands)),\n\t\td256: _.range(40).map((i) => getRand(2, i, rands)),\n\t\td4096: _.range(40).map((i) => getRand(3, i, rands)),\n\t\tloaded: true,\n\t}\n}\n\nexport function voice() {\n\tconsole.log('https://github.com/elzup/lain-time')\n\tconsole.log('https://twitter.com/_elzup_')\n\tconsole.log('https://twitter.com/anozon')\n}\n","export const getMetas = () => {\n\tlet n = ''\n\tfor (let i in navigator) {\n\t\tn += navigator[i]\n\t}\n\tlet w = ''\n\tfor (let i in window) {\n\t\tif (i === 'webkitStorageInfo') {\n\t\t\tcontinue\n\t\t}\n\t\tw += window[i]\n\t}\n\treturn n + w\n}\n\nexport const sleep = (ms: number) => new Promise((r) => setTimeout(r, ms))\n","import * as React from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Fact from '../../components/Fact'\nimport { now, sleep } from '../../utils'\nimport { makeEgo } from './logic'\n\nexport function useConnect(cur: string, delay: number) {\n\tconst history = useHistory()\n\tReact.useEffect(() => {\n\t\tsleep(delay).then(() => history.push(`/0/${now()}`))\n\t}, [cur, delay, history])\n}\n\nfunction LainComponent() {\n\tconst { time } = useParams<{ time: string }>()\n\tconst ego = makeEgo(Number(time))\n\tuseConnect(time, ego.next)\n\n\treturn <Fact ego={ego} />\n}\n\nexport default LainComponent\n","import * as React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { now } from '../../utils'\n\nconst Regenerate = () => <Redirect to={`/0/${now()}`} />\nexport default Regenerate\n","import React from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\n\nimport Lain from '../Lain'\nimport Zero from '../Zero'\n\nimport { createBrowserHistory } from 'history'\nexport const history = createBrowserHistory()\n\nconst RouteApp = () => (\n\t<Router history={history}>\n\t\t<Switch>\n\t\t\t<Route exact path=\"/\" component={Zero} />\n\t\t\t<Route exact path=\"/0\" component={Zero} />\n\t\t\t<Route exact path=\"/0/:time\" component={Lain} />\n\t\t</Switch>\n\t</Router>\n)\nexport default RouteApp\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.1/8 is considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.')\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error('Error during service worker registration:', error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type')\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\tregistration.unregister()\n\t\t})\n\t}\n}\n","import * as React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './containers/App'\n\nimport * as serviceWorker from './config/serviceWorker'\n\nimport { voice } from './containers/Lain/logic'\n\nconst rootEl = document.getElementById('root')\n\nvoice()\nif (rootEl !== null) {\n\tReactDOM.render(<App />, rootEl)\n\tserviceWorker.unregister()\n}\n"],"sourceRoot":""}